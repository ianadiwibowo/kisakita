// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entities "gitlab.com/ianadiwibowo/kisakita-stories/entities"
import mock "github.com/stretchr/testify/mock"

// StoryRepositories is an autogenerated mock type for the StoryRepositories type
type StoryRepositories struct {
	mock.Mock
}

// Create provides a mock function with given fields: newStory
func (_m *StoryRepositories) Create(newStory *entities.Story) error {
	ret := _m.Called(newStory)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Story) error); ok {
		r0 = rf(newStory)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: existingStory
func (_m *StoryRepositories) Delete(existingStory *entities.Story) error {
	ret := _m.Called(existingStory)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Story) error); ok {
		r0 = rf(existingStory)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get10LatestStories provides a mock function with given fields:
func (_m *StoryRepositories) Get10LatestStories() ([]*entities.Story, error) {
	ret := _m.Called()

	var r0 []*entities.Story
	if rf, ok := ret.Get(0).(func() []*entities.Story); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Story)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByAuthorID provides a mock function with given fields: writerID
func (_m *StoryRepositories) GetByAuthorID(writerID int) ([]*entities.Story, error) {
	ret := _m.Called(writerID)

	var r0 []*entities.Story
	if rf, ok := ret.Get(0).(func(int) []*entities.Story); ok {
		r0 = rf(writerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Story)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(writerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: storyID
func (_m *StoryRepositories) GetByID(storyID int) (*entities.Story, error) {
	ret := _m.Called(storyID)

	var r0 *entities.Story
	if rf, ok := ret.Get(0).(func(int) *entities.Story); ok {
		r0 = rf(storyID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Story)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(storyID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: existingStory
func (_m *StoryRepositories) Update(existingStory *entities.Story) error {
	ret := _m.Called(existingStory)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Story) error); ok {
		r0 = rf(existingStory)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
